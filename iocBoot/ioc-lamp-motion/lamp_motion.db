record(bi, "$(PREFIX)LCLSGeneral:GlobalLogTrickleTrip_RBV") {
  field(DESC, "Tripped by overall log count")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/GVL_Logger.bTrickleTripped?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)LCLSGeneral:LogHost_RBV") {
  field(DESC, "The log host IP address")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/GVL_Logger.cLogHost?")
  field(FTVL, "CHAR")
  field(NELM, "15")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)LCLSGeneral:LogHost") {
  field(DESC, "The log host IP address")
  field(DTYP, "asynInt8ArrayOut")
  field(UDFS, "0")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/GVL_Logger.cLogHost=")
  field(FTVL, "CHAR")
  field(NELM, "15")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS VAL")
  info(archive, "VAL")
}

record(longin, "$(PREFIX)LCLSGeneral:LogPort_RBV") {
  field(DESC, "The log host UDP port")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/GVL_Logger.iLogPort?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longout, "$(PREFIX)LCLSGeneral:LogPort") {
  field(DESC, "The log host UDP port")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/GVL_Logger.iLogPort=")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS VAL")
  info(archive, "VAL")
}

record(longin, "$(PREFIX)LCLSGeneral:LogMessageCount_RBV") {
  field(DESC, "Total log messages on the last cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/GVL_Logger.nGlobAccEvents?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)DB:REFRESH_RBV") {
  field(DESC, "MOTION_GVL.fbStandardPMPSDB.bRefresh")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/MOTION_GVL.fbStandardPMPSDB.bRefresh?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "$(PREFIX)DB:REFRESH") {
  field(DESC, "MOTION_GVL.fbStandardPMPSDB.bRefresh")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/MOTION_GVL.fbStandardPMPSDB.bRefresh=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(longin, "$(PREFIX)DB:LAST_REFRESH_RBV") {
  # MOTION_GVL.fbStandardPMPSDB.nLastRefreshTime
  field(DESC, "MOTION_GVL.fbStandar....nLastRefreshTime")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/MOTION_GVL.fbStandardPMPSDB.nLastRefreshTime?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:01:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M1.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:01:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:01:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:01:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:01:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:01:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:01:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:01:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:01:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:01:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:01:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:01:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:01:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M1.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:01:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M1.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:01:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:01:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:01:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:01:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:01:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:01:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:01:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:01:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:01:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:01:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:01:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:01:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:01:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:01:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:01:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:01:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:14:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M14.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:14:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:14:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:14:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:14:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:14:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:14:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:14:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:14:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:14:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M14.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:14:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:14:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:14:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M14.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:14:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M14.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:14:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:14:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:14:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:14:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:14:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:14:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:14:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:14:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:14:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:14:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:14:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:14:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:14:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:14:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:14:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:14:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M14.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:15:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M15.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:15:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:15:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:15:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:15:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:15:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:15:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:15:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:15:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:15:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M15.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:15:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:15:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:15:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M15.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:15:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M15.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:15:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:15:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:15:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:15:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:15:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:15:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:15:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:15:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:15:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:15:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:15:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:15:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:15:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:15:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:15:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:15:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M15.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:16:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M16.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:16:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:16:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:16:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:16:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:16:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:16:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:16:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:16:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:16:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M16.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:16:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:16:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:16:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M16.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:16:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M16.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:16:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:16:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:16:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:16:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:16:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:16:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:16:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:16:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:16:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:16:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:16:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:16:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:16:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:16:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:16:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:16:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M16.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:02:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M2.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:02:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:02:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:02:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:02:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:02:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:02:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:02:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:02:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:02:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:02:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:02:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:02:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M2.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:02:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M2.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:02:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:02:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:02:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:02:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:02:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:02:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:02:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:02:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:02:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:02:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:02:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:02:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:02:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:02:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:02:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:02:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:03:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M3.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:03:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:03:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:03:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:03:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:03:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:03:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:03:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:03:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:03:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:03:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:03:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:03:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M3.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:03:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M3.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:03:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:03:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:03:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:03:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:03:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:03:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:03:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:03:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:03:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:03:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:03:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:03:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:03:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:03:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:03:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:03:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:04:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M4.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:04:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:04:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:04:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:04:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:04:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:04:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:04:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:04:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:04:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:04:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:04:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:04:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M4.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:04:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M4.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:04:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:04:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:04:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:04:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:04:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:04:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:04:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:04:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:04:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:04:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:04:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:04:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:04:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:04:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:04:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:04:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:05:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M5.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:05:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:05:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:05:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:05:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:05:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:05:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:05:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:05:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:05:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:05:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:05:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:05:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M5.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:05:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M5.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:05:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:05:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:05:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:05:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:05:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:05:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:05:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:05:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:05:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:05:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:05:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:05:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:05:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:05:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:05:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:05:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:06:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M6.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:06:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:06:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:06:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:06:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:06:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:06:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:06:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:06:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:06:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:06:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:06:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:06:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M6.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:06:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M6.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:06:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:06:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:06:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:06:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:06:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:06:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:06:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:06:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:06:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:06:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:06:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:06:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:06:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:06:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:06:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:06:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:07:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M7.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:07:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:07:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:07:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:07:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:07:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:07:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:07:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:07:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:07:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:07:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:07:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:07:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M7.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:07:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M7.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:07:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:07:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:07:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:07:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:07:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:07:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:07:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:07:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:07:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:07:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:07:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:07:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:07:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:07:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:07:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:07:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:08:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M8.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:08:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:08:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:08:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:08:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:08:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:08:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:08:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:08:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:08:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M8.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:08:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:08:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:08:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M8.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:08:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M8.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:08:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:08:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:08:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:08:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:08:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:08:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:08:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:08:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:08:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:08:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:08:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:08:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:08:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:08:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:08:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:08:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M8.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:09:PLC:bError_RBV") {
  field(DESC, "TRUE if we are in an error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M9.bError?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:09:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:09:PLC:bHomeCmd_RBV") {
  field(DESC, "Start the homing routine")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bHomeCmd?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:09:PLC:bHomeCmd") {
  field(DESC, "Start the homing routine")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.bHomeCmd=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:09:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:09:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(bi, "TMO:LAMP:MMS:09:PLC:bUserEnable_RBV") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.bUserEnable?")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bo, "TMO:LAMP:MMS:09:PLC:bUserEnable") {
  # Used to disable power entirely for an axis
  field(DESC, "Used to disable powe...irely for an axis")
  field(DTYP, "asynInt32")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.bUserEnable=")
  field(ZNAM, "DISABLE")
  field(ONAM, "ENABLE")
  info(autosaveFields_pass0, "COSV DESC DISS OSV SIMS UDFS VAL ZSV")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:09:PLC:fHomePosition_RBV") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ao, "TMO:LAMP:MMS:09:PLC:fHomePosition") {
  # Used internally and by the IOC to pick home position
  field(DESC, "Used internally and ...ick home position")
  field(DTYP, "asynFloat64")
  field(UDFS, "0")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M9.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS DRVH DRVL HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS VAL")
  info(archive, "VAL")
}

record(ai, "TMO:LAMP:MMS:09:PLC:fPosDiff_RBV") {
  field(DESC, "Position lag difference")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.fPosDiff?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:09:PLC:nEncoderCount_RBV") {
  field(DESC, "Count from encoder hardware")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.nEncoderCount?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:09:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M9.nErrorId?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:09:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/TS_MS=10/Main.M9.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:09:PLC:AxisPar:PosLagEn_RBV") {
  # TRUE if position lag monitor (also known as stall monitor) is enabled.
  field(DESC, "TRUE if position lag...itor) is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.bCtrlEnablePosDiffControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:09:PLC:AxisPar:SLimMaxEn_RBV") {
  # TRUE if controller static maximum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.bEncEnableSoftEndMaxControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:09:PLC:AxisPar:SLimMinEn_RBV") {
  # TRUE if controller static minimum limit is enabled.
  field(DESC, "TRUE if controller s...limit is enabled.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.bEncEnableSoftEndMinControl?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:MaxAccel_RBV") {
  # Maximum rate of increase in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of incr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fAccelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:PosLagVal_RBV") {
  field(DESC, "Maximum magnitude of position lag in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fCtrlPosDiffMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:PosLagTime_RBV") {
  # Maximum allowable duration outside of maximum position lag value in seconds.
  field(DESC, "Maximum allowable du...value in seconds.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fCtrlPosDiffMaxTime?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:MaxDecel_RBV") {
  # Maximum rate of decrease in speed of the axis in EU/s^2.
  field(DESC, "Maximum rate of decr...e axis in EU/s^2.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fDecelerationMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:EncOffset_RBV") {
  field(DESC, "Encoder offset in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fEncOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:EncScaling_RBV") {
  # Encoder scaling numerator / denominator in EU/COUNT.
  field(DESC, "Encoder scaling nume...ator in EU/COUNT.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fEncScaleFactorInternal?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:SLimMax_RBV") {
  # Maximum commandable position of the axis in EU.
  field(DESC, "Maximum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fEncSoftEndMax?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:SLimMin_RBV") {
  # Minimum commandable position of the axis in EU.
  field(DESC, "Minimum commandable ...f the axis in EU.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fEncSoftEndMin?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "TMO:LAMP:MMS:09:PLC:AxisPar:MaxVel_RBV") {
  # Maximum commandable speed of the axis in EU/s.
  field(DESC, "Maximum commandable ...the axis in EU/s.")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stAxisParametersExposed.fVeloMaximum?")
  field(PREC, "3")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:09:PLC:stEPSB:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSBackwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:09:PLC:stEPSB:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSBackwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:09:PLC:stEPSB:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSBackwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:09:PLC:stEPSB:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSBackwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:09:PLC:stEPSF:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSForwardEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:09:PLC:stEPSF:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSForwardEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:09:PLC:stEPSF:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSForwardEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:09:PLC:stEPSF:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSForwardEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "TMO:LAMP:MMS:09:PLC:stEPSP:bEPS_OK_RBV") {
  field(DESC, "check if nFlags are all true")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSPowerEnable.bEPS_OK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "TMO:LAMP:MMS:09:PLC:stEPSP:nFlags_RBV") {
  field(DESC, "Contains EPS flags")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSPowerEnable.nFlags?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:09:PLC:stEPSP:sFlagDesc_RBV") {
  field(DESC, "semicolon-delimited nFlag variable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSPowerEnable.sFlagDesc?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "TMO:LAMP:MMS:09:PLC:stEPSP:sMessage_RBV") {
  field(DESC, "Message from EPS to usr")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M9.stEPSPowerEnable.sMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)AccumulatedFastFaults_RBV") {
  field(DESC, "PMPS_GVL.AccumulatedFF")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.AccumulatedFF?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)SuccessfulPreemptions_RBV") {
  field(DESC, "PMPS_GVL.SuccessfulPreemption")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.SuccessfulPreemption?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)0RateBeamCnst:Veto_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.aVetoDevices?")
  field(FTVL, "CHAR")
  field(NELM, "16")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Apt:01:Height_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[1].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Apt:01:Width_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[1].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)0RateBeamCnst:Apt:01:OK_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[1].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Apt:02:Height_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[2].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Apt:02:Width_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[2].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)0RateBeamCnst:Apt:02:OK_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[2].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Apt:03:Height_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[3].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Apt:03:Width_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[3].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)0RateBeamCnst:Apt:03:OK_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[3].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Apt:04:Height_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[4].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Apt:04:Width_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[4].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)0RateBeamCnst:Apt:04:OK_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.astApertures[4].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)0RateBeamCnst:BeamClassRanges_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.nBCRange?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)0RateBeamCnst:BeamClass_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.nBeamClass?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)0RateBeamCnst:Cohort_RBV") {
  field(DESC, "Cohort inc on each arb cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.nCohortInt?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)0RateBeamCnst:MachineMode_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.nMachineMode?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)0RateBeamCnst:Rate_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.nRate?")
  field(EGU, "Hz")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:Transmission_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.nTran?")
  field(PREC, "2")
  field(HOPR, "1")
  field(LOPR, "0")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)0RateBeamCnst:PhotonEnergy_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.neV?")
  field(PREC, "3")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)0RateBeamCnst:eVRanges_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.neVRange?")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)0RateBeamCnst:Valid_RBV") {
  field(DESC, "0-rate beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cst0RateBeam.xValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)FullBeamCnst:Veto_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.aVetoDevices?")
  field(FTVL, "CHAR")
  field(NELM, "16")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Apt:01:Height_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[1].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Apt:01:Width_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[1].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)FullBeamCnst:Apt:01:OK_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[1].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Apt:02:Height_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[2].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Apt:02:Width_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[2].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)FullBeamCnst:Apt:02:OK_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[2].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Apt:03:Height_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[3].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Apt:03:Width_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[3].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)FullBeamCnst:Apt:03:OK_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[3].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Apt:04:Height_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[4].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Apt:04:Width_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[4].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)FullBeamCnst:Apt:04:OK_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.astApertures[4].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)FullBeamCnst:BeamClassRanges_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.nBCRange?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)FullBeamCnst:BeamClass_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.nBeamClass?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)FullBeamCnst:Cohort_RBV") {
  field(DESC, "Cohort inc on each arb cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.nCohortInt?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)FullBeamCnst:MachineMode_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.nMachineMode?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)FullBeamCnst:Rate_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.nRate?")
  field(EGU, "Hz")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:Transmission_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.nTran?")
  field(PREC, "2")
  field(HOPR, "1")
  field(LOPR, "0")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)FullBeamCnst:PhotonEnergy_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.neV?")
  field(PREC, "3")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)FullBeamCnst:eVRanges_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.neVRange?")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)FullBeamCnst:Valid_RBV") {
  field(DESC, "Full beam constant")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.cstFullBeam.xValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)eVRangeCnst_RBV") {
  field(DESC, "Active eV Range constants")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat32ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.g_areVBoundaries?")
  field(FTVL, "FLOAT")
  field(EGU, "eV")
  field(NELM, "32")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)K:eVRangeCnst_RBV") {
  field(DESC, "eV Range constants")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat32ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.g_areVBoundariesK?")
  field(FTVL, "FLOAT")
  field(EGU, "eV")
  field(NELM, "32")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)L:eVRangeCnst_RBV") {
  field(DESC, "eV Range constants")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat32ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.g_areVBoundariesL?")
  field(FTVL, "FLOAT")
  field(EGU, "eV")
  field(NELM, "32")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)eVRangeHyst_RBV") {
  field(DESC, "eV Range hystersis")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.reVHyst?")
  field(PREC, "3")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)CurrentBP:Veto_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.aVetoDevices
  field(DESC, "PMPS_GVL.stCurrentBe...ters.aVetoDevices")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.aVetoDevices?")
  field(FTVL, "CHAR")
  field(NELM, "16")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Apt:01:Height_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[1].Height
  field(DESC, "PMPS_GVL.stCurrentBe...ertures[1].Height")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[1].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Apt:01:Width_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[1].Width
  field(DESC, "PMPS_GVL.stCurrentBe...pertures[1].Width")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[1].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)CurrentBP:Apt:01:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[1].xOK
  field(DESC, "PMPS_GVL.stCurrentBe...tApertures[1].xOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[1].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Apt:02:Height_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[2].Height
  field(DESC, "PMPS_GVL.stCurrentBe...ertures[2].Height")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[2].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Apt:02:Width_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[2].Width
  field(DESC, "PMPS_GVL.stCurrentBe...pertures[2].Width")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[2].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)CurrentBP:Apt:02:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[2].xOK
  field(DESC, "PMPS_GVL.stCurrentBe...tApertures[2].xOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[2].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Apt:03:Height_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[3].Height
  field(DESC, "PMPS_GVL.stCurrentBe...ertures[3].Height")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[3].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Apt:03:Width_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[3].Width
  field(DESC, "PMPS_GVL.stCurrentBe...pertures[3].Width")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[3].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)CurrentBP:Apt:03:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[3].xOK
  field(DESC, "PMPS_GVL.stCurrentBe...tApertures[3].xOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[3].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Apt:04:Height_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[4].Height
  field(DESC, "PMPS_GVL.stCurrentBe...ertures[4].Height")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[4].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Apt:04:Width_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[4].Width
  field(DESC, "PMPS_GVL.stCurrentBe...pertures[4].Width")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[4].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)CurrentBP:Apt:04:OK_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.astApertures[4].xOK
  field(DESC, "PMPS_GVL.stCurrentBe...tApertures[4].xOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.astApertures[4].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)CurrentBP:BeamClassRanges_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.nBCRange
  field(DESC, "PMPS_GVL.stCurrentBe...rameters.nBCRange")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.nBCRange?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)CurrentBP:BeamClass_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.nBeamClass
  field(DESC, "PMPS_GVL.stCurrentBe...meters.nBeamClass")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.nBeamClass?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)CurrentBP:Cohort_RBV") {
  field(DESC, "Cohort inc on each arb cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.nCohortInt?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)CurrentBP:MachineMode_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.nMachineMode
  field(DESC, "PMPS_GVL.stCurrentBe...ters.nMachineMode")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.nMachineMode?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)CurrentBP:Rate_RBV") {
  field(DESC, "PMPS_GVL.stCurrentBeamParameters.nRate")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.nRate?")
  field(EGU, "Hz")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:Transmission_RBV") {
  field(DESC, "PMPS_GVL.stCurrentBeamParameters.nTran")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.nTran?")
  field(PREC, "2")
  field(HOPR, "1")
  field(LOPR, "0")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)CurrentBP:PhotonEnergy_RBV") {
  field(DESC, "PMPS_GVL.stCurrentBeamParameters.neV")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.neV?")
  field(PREC, "3")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)CurrentBP:eVRanges_RBV") {
  # PMPS_GVL.stCurrentBeamParameters.neVRange
  field(DESC, "PMPS_GVL.stCurrentBe...rameters.neVRange")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.neVRange?")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)CurrentBP:Valid_RBV") {
  field(DESC, "PMPS_GVL.stCurrentBeamParameters.xValid")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stCurrentBeamParameters.xValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(waveform, "$(PREFIX)RequestedBP:Veto_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.aVetoDevices
  field(DESC, "PMPS_GVL.stRequested...ters.aVetoDevices")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.aVetoDevices?")
  field(FTVL, "CHAR")
  field(NELM, "16")
  field(MPST, "On Change")
  field(APST, "On Change")
  info(autosaveFields_pass0, "DESC DISS SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Apt:01:Height_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[1].Height
  field(DESC, "PMPS_GVL.stRequested...ertures[1].Height")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[1].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Apt:01:Width_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[1].Width
  field(DESC, "PMPS_GVL.stRequested...pertures[1].Width")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[1].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)RequestedBP:Apt:01:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[1].xOK
  field(DESC, "PMPS_GVL.stRequested...tApertures[1].xOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[1].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Apt:02:Height_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[2].Height
  field(DESC, "PMPS_GVL.stRequested...ertures[2].Height")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[2].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Apt:02:Width_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[2].Width
  field(DESC, "PMPS_GVL.stRequested...pertures[2].Width")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[2].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)RequestedBP:Apt:02:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[2].xOK
  field(DESC, "PMPS_GVL.stRequested...tApertures[2].xOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[2].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Apt:03:Height_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[3].Height
  field(DESC, "PMPS_GVL.stRequested...ertures[3].Height")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[3].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Apt:03:Width_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[3].Width
  field(DESC, "PMPS_GVL.stRequested...pertures[3].Width")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[3].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)RequestedBP:Apt:03:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[3].xOK
  field(DESC, "PMPS_GVL.stRequested...tApertures[3].xOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[3].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Apt:04:Height_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[4].Height
  field(DESC, "PMPS_GVL.stRequested...ertures[4].Height")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[4].Height?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Apt:04:Width_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[4].Width
  field(DESC, "PMPS_GVL.stRequested...pertures[4].Width")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[4].Width?")
  field(PREC, "3")
  field(EGU, "mm")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)RequestedBP:Apt:04:OK_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.astApertures[4].xOK
  field(DESC, "PMPS_GVL.stRequested...tApertures[4].xOK")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.astApertures[4].xOK?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)RequestedBP:BeamClassRanges_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.nBCRange
  field(DESC, "PMPS_GVL.stRequested...rameters.nBCRange")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.nBCRange?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)RequestedBP:BeamClass_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.nBeamClass
  field(DESC, "PMPS_GVL.stRequested...meters.nBeamClass")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.nBeamClass?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)RequestedBP:Cohort_RBV") {
  field(DESC, "Cohort inc on each arb cycle")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.nCohortInt?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)RequestedBP:MachineMode_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.nMachineMode
  field(DESC, "PMPS_GVL.stRequested...ters.nMachineMode")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.nMachineMode?")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)RequestedBP:Rate_RBV") {
  field(DESC, "PMPS_GVL.stRequestedBeamParameters.nRate")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.nRate?")
  field(EGU, "Hz")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:Transmission_RBV") {
  field(DESC, "PMPS_GVL.stRequestedBeamParameters.nTran")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.nTran?")
  field(PREC, "2")
  field(HOPR, "1")
  field(LOPR, "0")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(ai, "$(PREFIX)RequestedBP:PhotonEnergy_RBV") {
  field(DESC, "PMPS_GVL.stRequestedBeamParameters.neV")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.neV?")
  field(PREC, "3")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(longin, "$(PREFIX)RequestedBP:eVRanges_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.neVRange
  field(DESC, "PMPS_GVL.stRequested...rameters.neVRange")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.neVRange?")
  field(EGU, "eV")
  info(autosaveFields_pass0, "DESC DISS HHSV HIGH HIHI HSV LLSV LOLO LOW LSV SIMS UDFS")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}

record(bi, "$(PREFIX)RequestedBP:Valid_RBV") {
  # PMPS_GVL.stRequestedBeamParameters.xValid
  field(DESC, "PMPS_GVL.stRequested...Parameters.xValid")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PMPS_GVL.stRequestedBeamParameters.xValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "DESC DISS OSV SIMS UDFS ZSV")
  info(archive, "monitor 1: VAL")
  field(ASG, "NO_WRITE")
}